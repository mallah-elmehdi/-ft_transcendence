"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ContextMenu = void 0;
var React = __importStar(require("react"));
var react_1 = require("react");
var react_2 = require("@chakra-ui/react");
function ContextMenu(props) {
    var _a;
    var _b = (0, react_1.useState)(false), isOpen = _b[0], setIsOpen = _b[1];
    var _c = (0, react_1.useState)(false), isRendered = _c[0], setIsRendered = _c[1];
    var _d = (0, react_1.useState)(false), isDeferredOpen = _d[0], setIsDeferredOpen = _d[1];
    var _e = (0, react_1.useState)([0, 0]), position = _e[0], setPosition = _e[1];
    var targetRef = (0, react_1.useRef)(null);
    (0, react_1.useEffect)(function () {
        if (isOpen) {
            setTimeout(function () {
                setIsRendered(true);
                setTimeout(function () {
                    setIsDeferredOpen(true);
                });
            });
        }
        else {
            setIsDeferredOpen(false);
            var timeout_1 = setTimeout(function () {
                setIsRendered(isOpen);
            }, 1000);
            return function () { return clearTimeout(timeout_1); };
        }
    }, [isOpen]);
    (0, react_2.useEventListener)('contextmenu', function (e) {
        var _a;
        if (((_a = targetRef.current) === null || _a === void 0 ? void 0 : _a.contains(e.target)) || e.target === targetRef.current) {
            e.preventDefault();
            setIsOpen(true);
            setPosition([e.pageX, e.pageY]);
        }
        else {
            setIsOpen(false);
        }
    });
    var onCloseHandler = (0, react_1.useCallback)(function () {
        var _a, _b;
        (_b = (_a = props.menuProps) === null || _a === void 0 ? void 0 : _a.onClose) === null || _b === void 0 ? void 0 : _b.call(_a);
        setIsOpen(false);
    }, [(_a = props.menuProps) === null || _a === void 0 ? void 0 : _a.onClose, setIsOpen]);
    return (React.createElement(React.Fragment, null,
        props.children(targetRef),
        isRendered && (React.createElement(react_2.Portal, __assign({}, props.portalProps),
            React.createElement(react_2.Menu, __assign({ isOpen: isDeferredOpen, gutter: 0 }, props.menuProps, { onClose: onCloseHandler }),
                React.createElement(react_2.MenuButton, __assign({ "aria-hidden": true, w: 1, h: 1, style: {
                        position: 'absolute',
                        left: position[0],
                        top: position[1],
                        cursor: 'default',
                    } }, props.menuButtonProps)),
                props.renderMenu())))));
}
exports.ContextMenu = ContextMenu;
